///这个题主要是实现分数通分的过程，我用了GCD和LCM的算法，刚开始没有每一步都化简，一直卡第四个测试点，后面改了后提交就过了
#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;

int KGCD(int a,int b)  ///最大公约数O( log(max(a,b)) )
{
	if(a == 0)	return b;
	if(b == 0)	return a;
	if(~a & 1)
	{
		if(b & 1)	return KGCD(a>>1, b);
		else	return KGCD(a>>1, b>>1) << 1;
	}
	if(~b & 1)	return KGCD(a, b>>1);
	if(a > b)	return KGCD((a-b)>>1, b);
	return	KGCD((b-a)>>1, a);
}
int LCM(int a,int b)  ///最小公倍数
{
    return a/KGCD(a,b)*b;
}

int main()
{
    int n;
    scanf("%d",&n);
    int a,b;
    int x,y,z=0;
    int s1=0,s2=0;  ///s1是分母，s2是分子
    for(int i=0;i<n;i++){
        scanf("%d/%d",&a,&b);
        if(a==0||b==0){
            continue;
        }
        if(a!=0&&b!=0&&z==0){
            s1=b;
            s2=a;
            z++;
            int m=KGCD(abs(s1),abs(s2));
            s1/=m;
            s2/=m;
        }
        else{
            int temp=s1;
            s1=LCM(s1,b);
            x=s2*(s1/temp);
            y=a*(s1/b);
            s2=x+y;
            int c=KGCD(abs(s2),abs(s1));
            s2/=c;
            s1/=c;
            ///printf("%d %d %d %d\n",s1,s2,x,y);
        }
    }
    ///printf("%d %d",s1,s2);
    if(s2%s1==0) printf("%d\n",s2/s1);
    else{
        int t=s2/s1;
        s2=s2-s1*t;
        if(t!=0){
            printf("%d %d/%d\n",t,s2,s1);
        }
        else printf("%d/%d\n",s2,s1);
    }
    return 0;
}
